{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","emojiList","useState","userInput","setuserInput","emojiNew","Object","keys","className","type","onChange","event","textInput","target","value","meaning","console","log","undefined","placeholder","map","emoji","onClick","emojiClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAiEeA,MA3Df,WAEE,IAAIC,EAAY,CACd,eAAO,UACP,eAAO,SACP,eAAO,QACP,eAAO,WACP,eAAO,SAQL,EAA4BC,mBAAS,IAAzC,mBAAKC,EAAL,KAAgBC,EAAhB,KAwBIC,EAAWC,OAAOC,KAAKN,GAE3B,OACE,sBAAKO,UAAU,MAAf,UACE,6BA9CS,mBA+CT,uBAAOC,KAAK,OAAOC,SA3BvB,SAAmBC,GAGjB,IAAIC,EAAYD,EAAME,OAAOC,MACzBC,EAAUd,EAAUW,GAExBI,QAAQC,IAAIF,QAEGG,IAAZH,IACDA,EAAU,yBAGZX,EAAaW,IAe6BI,YAAY,gBAFtD,IAE6E,uBAE1Ed,EAASe,KAAK,SAASC,GACxB,OAAO,sBAAMb,UAAU,UAAUc,QAAS,kBAd9C,SAAoBD,GAClBL,QAAQC,IAAII,GAEZjB,EADcH,EAAUoB,IAY0BE,CAAWF,IAApD,SACNA,GADuEA,MAMxE,qBAAKb,UAAU,SAAf,SAAyBL,QC/ChBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.77802acc.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\n\nvar headtext = \"Emoji Fun Game\";\nvar clickk = 0;\n\nfunction App() {\n\n  var emojiList = {\n    \"üòÑ\" : \"Smiling\",\n    \"üò≠\" : \"Crying\",\n    \"‚ù§Ô∏è\" : \"Heart\",\n    \"ü§£\" : \"Laughing\",\n    \"üò†\" : \"Angry\"\n    // \"smiling\" : \"üòÑ\",\n    // \"crying\" : \"üò≠\",\n    // \"heart\" : \"‚ù§Ô∏è\",\n    // \"laughing\" : \"ü§£\",\n    // \"angry\" : \"üò†\"\n  }\n\n  var [userInput, setuserInput] = useState(\"\");\n\n  function InpChange(event){\n    // setuserInput(event.target.value);\n\n    var textInput = event.target.value;\n    var meaning = emojiList[textInput];\n\n    console.log(meaning);\n\n    if(meaning === undefined){\n      meaning = \"Not found in Database\";\n    }\n\n    setuserInput(meaning);\n\n  }\n\n  function emojiClick(emoji){\n    console.log(emoji);\n    var meaning = emojiList[emoji];\n    setuserInput(meaning);\n  }\n\n  var emojiNew = Object.keys(emojiList);\n\n  return (\n    <div className=\"App\">\n      <h1>{headtext}</h1>\n      <input type=\"text\" onChange={InpChange} placeholder=\"Enter Emoji\"></input> <br></br>\n\n      {emojiNew.map( function(emoji){\n      return <span className=\"emojies\" onClick={() => emojiClick(emoji)} key={emoji}>\n      {emoji}\n      </span>\n      \n      })}\n\n      <div className=\"output\">{userInput}</div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}